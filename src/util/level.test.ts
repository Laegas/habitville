import { getLevel } from '~/util/level'

describe('level', () => {
  test.each([
    [0, 1, 5, 0, 0],
    [4, 1, 5, 4, (4 / 5) * 100],
    [5, 2, 10, 0, 0],
    [14, 2, 10, 9, (9 / 10) * 100],
    [15, 3, 15, 0, 0],
    [29, 3, 15, 14, (14 / 15) * 100],
    [30, 4, 22, 0, 0],
    [51, 4, 22, 21, (21 / 22) * 100],
    [52, 5, 33, 0, 0],
    [84, 5, 33, 32, (32 / 33) * 100],
    [85, 6, 50, 0, 0],
    [134, 6, 50, 49, (49 / 50) * 100],
    [135, 7, 75, 0, 0],
    [209, 7, 75, 74, (74 / 75) * 100],
    [210, 8, 110, 0, 0],
    [319, 8, 110, 109, (109 / 110) * 100],
    [320, 9, 160, 0, 0],
    [479, 9, 160, 159, (159 / 160) * 100],
    [480, 10, 250, 0, 0],
    [729, 10, 250, 249, (249 / 250) * 100],
    [730, 11, 380, 0, 0],
    [1109, 11, 380, 379, (379 / 380) * 100],
    [1110, 12, 590, 0, 0],
    [1699, 12, 590, 589, (589 / 590) * 100],
    [1700, 13, 900, 0, 0],
    [2599, 13, 900, 899, (899 / 900) * 100],
    [2600, 14, 1400, 0, 0],
    [3999, 14, 1400, 1399, (1399 / 1400) * 100],
    [4000, 15, 2100, 0, 0],
    [6099, 15, 2100, 2099, (2099 / 2100) * 100],
    [6100, 16, 3100, 0, 0],
    [9199, 16, 3100, 3099, (3099 / 3100) * 100],
    [9200, 17, 4600, 0, 0],
    [13799, 17, 4600, 4599, (4599 / 4600) * 100],
    [13800, 18, 7000, 0, 0],
    [20799, 18, 7000, 6999, (6999 / 7000) * 100],
    [20800, 19, 10500, 0, 0],
    [31299, 19, 10500, 10499, (10499 / 10500) * 100],
    [31300, 20, 16000, 0, 0],
    [47299, 20, 16000, 15999, (15999 / 16000) * 100],
    [47300, 21, 24000, 0, 0],
    [71299, 21, 24000, 23999, (23999 / 24000) * 100],
    [71300, 21, 24000, 24000, 100],
    [100000, 21, 24000, 100000 - 71300 + 24000, 100],
  ])(
    'calculate level correctly for xp: %d',
    (
      xp,
      level,
      xpNeededForNextLevel,
      currentLevelXpProgressAbs,
      currentLevelXpProgressPct,
    ) => {
      expect(getLevel(xp)).toEqual(
        expect.objectContaining({
          level,
          xpNeededForNextLevel,
          currentLevelXpProgressAbs,
          currentLevelXpProgressPct,
        }),
      )
    },
  )
})
